openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /expenseapp/summary/:
    get:
      operationId: listuser_summary_details
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/full_summary/:
    get:
      operationId: listuser_full_summary_details
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/accounts/:
    get:
      operationId: listAccounts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
    post:
      operationId: createAccountList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/accounts/{id}/:
    get:
      operationId: retrieveAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - expenseapp
    put:
      operationId: updateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - expenseapp
    patch:
      operationId: partialUpdateAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
      tags:
      - expenseapp
    delete:
      operationId: destroyAccount
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - expenseapp
  /expenseapp/accounts/{id}/summary/:
    get:
      operationId: listaccount_summary_details
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/transactions/:
    get:
      operationId: listUserTransactions
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
    post:
      operationId: createUserTransactionList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/transactions/{arg_first_date}/to/{arg_last_date}/:
    get:
      operationId: retrieveuser_interval_transactions
      description: ''
      parameters:
      - name: arg_first_date
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: arg_last_date
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/transactions/category/{arg_category}/:
    get:
      operationId: retrieveuser_category_transactions
      description: ''
      parameters:
      - name: arg_category
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/transactions/category/{arg_category}/{arg_first_date}/to/{arg_last_date}/:
    get:
      operationId: retrieveinterval_category_transactions
      description: ''
      parameters:
      - name: arg_category
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: arg_first_date
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: arg_last_date
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/accounts/{id}/transactions/:
    get:
      operationId: listaccount_transaction_lists
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/accounts/{id}/transactions/category/{arg_category}/:
    get:
      operationId: retrieveaccount_category_transactions
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: arg_category
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/budget/:
    get:
      operationId: listUserBudgets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
    post:
      operationId: createUserBudget
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/budget/{interval_type}/:
    get:
      operationId: retrieveUserBudgetDetail
      description: ''
      parameters:
      - name: interval_type
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
    put:
      operationId: updateUserBudgetDetail
      description: ''
      parameters:
      - name: interval_type
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
    delete:
      operationId: destroyUserBudgetDetail
      description: ''
      parameters:
      - name: interval_type
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - expenseapp
  /expenseapp/bills/:
    get:
      operationId: listBills
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
    post:
      operationId: createBillsList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/bills/{id}/:
    get:
      operationId: retrieveBill
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
      tags:
      - expenseapp
    put:
      operationId: updateBill
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
      tags:
      - expenseapp
    patch:
      operationId: partialUpdateBill
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Bill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
          description: ''
      tags:
      - expenseapp
    delete:
      operationId: destroyBill
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - expenseapp
  /expenseapp/overdue_message/:
    get:
      operationId: listoverdue_message_lists
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/stocks/:
    get:
      operationId: listStocks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
    post:
      operationId: createStockList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/stocks/{symbol}/:
    get:
      operationId: retrieveStockPriceDetail
      description: ''
      parameters:
      - name: symbol
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
    put:
      operationId: updateStockPriceDetail
      description: ''
      parameters:
      - name: symbol
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - expenseapp
    delete:
      operationId: destroyStockPriceDetail
      description: ''
      parameters:
      - name: symbol
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - expenseapp
  /expenseapp/portfolio_value/:
    get:
      operationId: listportfolio_value_lists
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - expenseapp
  /expenseapp/login/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - expenseapp
  /expenseapp/login/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - expenseapp
  /expenseapp/login/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - expenseapp
  /expenseapp/register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - expenseapp
  /expenseapp/logout/:
    post:
      operationId: createTokenBlacklist
      description: 'Takes a token and blacklists it. Must be used with the

        `rest_framework_simplejwt.token_blacklist` app installed.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
      tags:
      - expenseapp
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        name:
          type: string
          maxLength: 50
        institution:
          type: string
          maxLength: 50
        account_type:
          enum:
          - Debit
          - Credit
          type: string
        balance:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: !!python/object/apply:decimal.Decimal
          - '0'
        credit_limit:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        user:
          type: integer
      required:
      - account_number
      - name
      - institution
      - account_type
    Bill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 200
        amount:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: !!python/object/apply:decimal.Decimal
          - '1'
        due_date:
          type: string
          format: date
        user:
          type: integer
        pay_account:
          type: integer
          nullable: true
      required:
      - description
      - due_date
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Register:
      type: object
      properties:
        full_name:
          type: string
          maxLength: 100
        user_email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 100
        password:
          type: string
          maxLength: 100
        password_again:
          type: string
          writeOnly: true
          maxLength: 20
      required:
      - full_name
      - user_email
      - password_again
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh